{"version":3,"sources":["../src/cli.js"],"names":["minimist","require","isArray","isNumber","isFinite","isString","isNil","createWatcher","msg","args","process","argv","w","watch","ext","d","delay","exec","script","help","debug","watcherOpts","watchPatterns","restartDelay","extensions","console","log","exit","push","concat","split","forEach","item","execFound","reduce","op","arg","trim","watcher","addListener","err","stderr","write","evt","stdout","pipe","start"],"mappings":"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","sourcesContent":["#!/usr/bin/env opti-node\n\n/*\n\nopti-node-watch cli app\n\n+ command line interface for opti-node-watch\n+ watch files\n+ have a delay\n+ run a node script with opti-node\n+ OR run a custom shell script\n\nAPI doc in ../readme.md\n\nSee  ../COPYING for GPL 3.0 license\n\n*/\n\nconst minimist = require(\"minimist\");\nconst isArray = require(\"lodash/isArray\");\nconst isNumber = require(\"lodash/isNumber\");\nconst isFinite = require(\"lodash/isFinite\");\nconst isString = require(\"lodash/isString\");\nconst isNil = require(\"lodash/isNil\");\nconst { createWatcher } = require(\".\");\nconst msg = require(\"./lib/msg\");\nconst args = minimist(process.argv);\nconst { w, watch, ext, d, delay, exec, script, help, debug } = args;\n\nconst watcherOpts = {\n  watchPatterns: [],\n  restartDelay: 0,\n  extensions: [\"js\", \"jsx\", \"json\"],\n  exec: \"\",\n  script: \"\",\n  debug: false\n};\n\nif (isNil(help) === false) {\n  console.log(`\n  opti-node-watch\n\n  Watch these directories or files. (required, no default)\n  -w dist/client\n  --watch dist/server\n  -w dist/shared\n  -w dist/index.js\n  --watch package.json\n\n  ---\n\n  Extensions: (optional, default: js,jsx,json)\n  --ext js,jsx,ts,tsx,json\n\n  Use of --ext is comma-separated without spaces.\n\n  ---\n\n  Reload delay in milliseconds: (optional)\n  -d 1000\n  --delay 1000\n\n  ---\n\n  Command to execute: (optional, default: opti-node)\n  --exec node\n  --exec python\n\n  ---\n\n  Which script to run: (required, no default)\n  --script dist/index.js\n\n  ---\n\n  Debug, show which events happen:\n  --debug\n\n  ---\n\n  Help:\n  --help\n  `);\n  process.exit();\n}\n\n//\n// -w\n//\n\nif (isString(w) === true) {\n  watcherOpts.watchPatterns.push(w);\n}\n\nif (isArray(w) === true) {\n  watcherOpts.watchPatterns = watcherOpts.watchPatterns.concat(w);\n}\n\n//\n// --watch\n//\nif (isString(watch) === true) {\n  watcherOpts.watchPatterns.push(watch);\n}\n\nif (isArray(watch) === true) {\n  watcherOpts.watchPatterns = watcherOpts.watchPatterns.concat(watch);\n}\n\n//\n// --ext\n//\n\nif (isString(ext) === true) {\n  ext.split(\",\").forEach(item => watcherOpts.extensions.push(item));\n}\n\nif (isArray(ext) === true) {\n  watcherOpts.extensions = watcherOpts.extensions.concat(ext);\n}\n\n//\n// -d\n//\n\nif (isNumber(d) === true && isFinite(d) === true) {\n  watcherOpts.restartDelay = d;\n}\n\n//\n// --delay\n//\n\nif (isNumber(delay) === true && isFinite(delay) === true) {\n  watcherOpts.restartDelay = delay;\n}\n\n//\n// --exec\n//\n\nif (isString(exec) === true) {\n  // watcherOpts.exec = exec;\n  let execFound = false;\n\n  watcherOpts.exec = process.argv\n    .reduce((op, arg) => {\n      if (execFound === true) {\n        return `${op} ${arg}`;\n      }\n\n      if (arg === \"--exec\") {\n        execFound = true;\n      }\n\n      return op;\n    }, \"\")\n    .trim();\n}\n\n//\n// --script\n//\n\nif (isString(script) === true) {\n  watcherOpts.script = script;\n}\n\n//\n// --debug\n//\n\nif (debug === true) {\n  watcherOpts.debug = debug;\n}\n\nconst watcher = createWatcher(watcherOpts);\n\nwatcher.addListener(\"error\", err => {\n  process.stderr.write(msg(\"error\", err));\n});\n\nwatcher.addListener(\"change\", evt => {\n  if (debug === true) {\n    process.stdout.write(msg(\"change\", evt));\n  }\n});\n\nwatcher.addListener(\"proc-error\", err => {\n  process.stderr.write(msg(\"proc-error\", err));\n});\n\nwatcher.addListener(\"proc-disconnect\", err => {\n  if (debug === true) {\n    process.stdout.write(msg(\"proc-disconnect\", err));\n  }\n});\n\nwatcher.addListener(\"proc-close\", err => {\n  if (debug === true) {\n    process.stdout.write(msg(\"proc-close\", err));\n  }\n});\n\nwatcher.addListener(\"proc-exit\", err => {\n  if (debug === true) {\n    process.stdout.write(msg(\"proc-exit\", err));\n  }\n});\n\nwatcher.stdout.pipe(process.stdout);\nwatcher.stderr.pipe(process.stderr);\n\nwatcher.addListener(\"started\", () => {\n  if (debug === true) {\n    process.stdout.write(msg(\"started\"));\n  }\n});\n\nwatcher.start();\n"],"file":"cli.js"}