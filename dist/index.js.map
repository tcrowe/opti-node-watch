{"version":3,"sources":["../src/index.js"],"names":["fs","require","path","assert","EventEmitter","spawn","async","micromatch","isArray","isString","isNumber","isFinite","isNil","flatten","debounce","through","createProcess","process","env","NODE_ENV","cwd","chalk","unixRoot","windowsRootPattern","lineBreakPattern","internalErrorPatterns","colorErrorPatterns","urlPatterns","leadingQuotesPattern","trailingQuotesPattern","isAbsolutePath","str","startsWith","test","statList","absolutePaths","done","map","stat","hasNoInternalErrors","stdLine","every","pattern","indexOf","constructor","RegExp","Error","colorErrors","undefined","reduce","op","matches","exec","length","replace","red","colorUrls","bgHex","hex","underline","formatErrors","chunk","toString","split","filter","join","createWatcher","opts","watchPatterns","restartDelay","extensions","script","item","watcher","globPatterns","fsWatchers","write","queue","errorChunks","errorTimer","writeError","clearTimeout","push","setTimeout","end","stdout","autoDestroy","stderr","concat","resolve","proc","respawn","removeAllListeners","unpipe","kill","args","cmd","trim","execCmd","execArgs","forEach","optiNodeOpts","addListener","emit","err","pipe","restart","fsWatcherChange","fsWatcher","evtType","filename","fsWatcherClose","fsWatcherError","watcherHelp","createWatchers","stats","index","watch","watcherEvents","watchers","stop","close","error","watchPaths","steps","auto","start","module","exports"],"mappings":"0aAUA,GAAMA,CAAAA,EAAE,CAAGC,OAAO,CAAC,IAAD,CAAlB,CACA,GAAMC,CAAAA,IAAI,CAAGD,OAAO,CAAC,MAAD,CAApB,CACA,GAAME,CAAAA,MAAM,CAAGF,OAAO,CAAC,QAAD,CAAtB,C,aACyBA,OAAO,CAAC,QAAD,C,CAAxBG,Y,UAAAA,Y,eACUH,OAAO,CAAC,eAAD,C,CAAjBI,K,WAAAA,K,CACR,GAAMC,CAAAA,KAAK,CAAGL,OAAO,CAAC,OAAD,CAArB,CACA,GAAMM,CAAAA,UAAU,CAAGN,OAAO,CAAC,YAAD,CAA1B,CACA,GAAMO,CAAAA,OAAO,CAAGP,OAAO,CAAC,gBAAD,CAAvB,CACA,GAAMQ,CAAAA,QAAQ,CAAGR,OAAO,CAAC,iBAAD,CAAxB,CACA,GAAMS,CAAAA,QAAQ,CAAGT,OAAO,CAAC,iBAAD,CAAxB,CACA,GAAMU,CAAAA,QAAQ,CAAGV,OAAO,CAAC,iBAAD,CAAxB,CACA,GAAMW,CAAAA,KAAK,CAAGX,OAAO,CAAC,cAAD,CAArB,CACA,GAAMY,CAAAA,OAAO,CAAGZ,OAAO,CAAC,gBAAD,CAAvB,CACA,GAAMa,CAAAA,QAAQ,CAAGb,OAAO,CAAC,iBAAD,CAAxB,CACA,GAAMc,CAAAA,OAAO,CAAGd,OAAO,CAAC,SAAD,CAAvB,C,cAC0BA,OAAO,CAAC,WAAD,C,CAAzBe,a,WAAAA,a,2BAC6BC,OAAO,CAACC,G,CAArCC,Q,CAAAA,Q,gCAAW,a,uBACnB,GAAMC,CAAAA,GAAG,CAAGH,OAAO,CAACG,GAAR,EAAZ,CAGA,GAAIC,CAAAA,KAAJ,CAGA,GAAMC,CAAAA,QAAQ,CAAG,GAAjB,CACA,GAAMC,CAAAA,kBAAkB,CAAG,aAA3B,CAGA,GAAMC,CAAAA,gBAAgB,CAAG,IAAzB,CACA,GAAMC,CAAAA,qBAAqB,CAAG,CAC5B,gCAD4B,CAE5B,4BAF4B,CAA9B,CAIA,GAAMC,CAAAA,kBAAkB,CAAG,CAAC,sBAAD,CAA3B,CACA,GAAMC,CAAAA,WAAW,CAAG,CAAC,sBAAD,CAApB,CACA,GAAMC,CAAAA,oBAAoB,CAAG,QAA7B,CACA,GAAMC,CAAAA,qBAAqB,CAAG,QAA9B,CASA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAAC,GAAG,QACxBA,CAAAA,GAAG,CAACC,UAAJ,CAAeV,QAAf,IAA6B,IAA7B,EAAqCC,kBAAkB,CAACU,IAAnB,CAAwBF,GAAxB,IAAiC,IAD9C,CAA1B,CAUA,GAAMG,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,aAAa,QAAI,UAAAC,IAAI,QACpC9B,CAAAA,KAAK,CAAC+B,GAAN,CAAUF,aAAV,CAAyBnC,EAAE,CAACsC,IAA5B,CAAkCF,IAAlC,CADoC,CAAR,CAA9B,CAUA,GAAMG,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAAAC,OAAO,QACjCf,CAAAA,qBAAqB,CAACgB,KAAtB,CAA4B,SAAAC,OAAO,CAAI,CACrC,GAAIjC,QAAQ,CAACiC,OAAD,CAAR,GAAsB,IAA1B,CAAgC,CAC9B,MAAOF,CAAAA,OAAO,CAACG,OAAR,CAAgBD,OAAhB,IAA6B,CAAC,CACtC,CAED,GAAIA,OAAO,CAACE,WAAR,GAAwBC,MAA5B,CAAoC,CAClC,MAAOH,CAAAA,OAAO,CAACT,IAAR,CAAaO,OAAb,IAA0B,KAClC,CAED,KAAM,IAAIM,CAAAA,KAAJ,CAAU,yCAAV,CACP,CAVD,IAUO,IAX0B,CAAnC,CAoBA,QAASC,CAAAA,WAAT,CAAqBP,OAArB,CAA8B,CAE5B,GAAInB,KAAK,GAAK2B,SAAd,CAAyB,CACvB3B,KAAK,CAAGpB,OAAO,CAAC,OAAD,CAChB,CAED,MAAOyB,CAAAA,kBAAkB,CAACuB,MAAnB,CAA0B,SAACC,EAAD,CAAKR,OAAL,CAAiB,CAChD,GAAMS,CAAAA,OAAO,CAAGT,OAAO,CAACU,IAAR,CAAaF,EAAb,CAAhB,CAEA,GAAIC,OAAO,GAAK,IAAZ,EAAoBA,OAAO,CAACE,MAAR,CAAiB,CAAzC,CAA4C,CAC1CH,EAAE,CAAGA,EAAE,CAACI,OAAH,CAAWZ,OAAX,CAAoBrB,KAAK,CAACkC,GAAN,CAAUJ,OAAO,CAAC,CAAD,CAAjB,CAApB,CACN,CAED,MAAOD,CAAAA,EACR,CARM,CAQJV,OARI,CASR,CASD,QAASgB,CAAAA,SAAT,CAAmBhB,OAAnB,CAA4B,CAE1B,GAAInB,KAAK,GAAK2B,SAAd,CAAyB,CACvB3B,KAAK,CAAGpB,OAAO,CAAC,OAAD,CAChB,CAED,MAAO0B,CAAAA,WAAW,CAACsB,MAAZ,CAAmB,SAACC,EAAD,CAAKR,OAAL,CAAiB,CACzC,GAAMS,CAAAA,OAAO,CAAGT,OAAO,CAACU,IAAR,CAAaF,EAAb,CAAhB,CAEA,GAAIC,OAAO,GAAK,IAAZ,EAAoBA,OAAO,CAACE,MAAR,CAAiB,CAAzC,CAA4C,CAC1CH,EAAE,CAAGA,EAAE,CAACI,OAAH,CACHZ,OADG,CAEHrB,KAAK,CACFoC,KADH,CACS,SADT,EAEGC,GAFH,CAEO,SAFP,EAGGC,SAHH,CAGaR,OAAO,CAAC,CAAD,CAHpB,CAFG,CAON,CAED,MAAOD,CAAAA,EACR,CAdM,CAcJV,OAdI,CAeR,CASD,GAAMoB,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,KAAK,QACxBA,CAAAA,KAAK,CACFC,QADH,GAEGC,KAFH,CAESvC,gBAFT,EAGGwC,MAHH,CAGUzB,mBAHV,EAIGF,GAJH,CAIOU,WAJP,EAKGV,GALH,CAKOmB,SALP,EAMGS,IANH,CAMQ,IANR,CADwB,CAA1B,CAqBA,QAASC,CAAAA,aAAT,CAAuBC,IAAvB,CAA6B,yBAOvBA,IAPuB,CAEzBC,aAFyB,CAEzBA,aAFyB,8BAET,EAFS,wCAOvBD,IAPuB,CAGzBE,YAHyB,CAGzBA,YAHyB,6BAGV,CAHU,qCAOvBF,IAPuB,CAIzBG,UAJyB,CAIzBA,UAJyB,2BAIZ,CAAC,IAAD,CAAO,KAAP,CAAc,MAAd,CAJY,6BAOvBH,IAPuB,CAKzBf,IALyB,CAKzBA,IALyB,qBAKlB,EALkB,yBAOvBe,IAPuB,CAMzBI,MANyB,CAMzBA,MANyB,uBAMhB,EANgB,cAa3BpE,MAAM,CAACK,OAAO,CAAC4D,aAAD,CAAP,GAA2B,IAA5B,CAAkC,2BAAlC,CAAN,CAEAjE,MAAM,CACJiE,aAAa,CAAC3B,KAAd,CAAoB,SAAA+B,IAAI,QAAI/D,CAAAA,QAAQ,CAAC+D,IAAD,CAAR,GAAmB,IAAvB,CAAxB,IAAyD,IADrD,CAEJ,sCAFI,CAAN,CAKArE,MAAM,CACJmE,UAAU,CAAC7B,KAAX,CAAiB,SAAA+B,IAAI,QAAI/D,CAAAA,QAAQ,CAAC+D,IAAD,CAAR,GAAmB,IAAvB,CAArB,IAAsD,IADlD,CAEJ,mCAFI,CAAN,CAKArE,MAAM,CAACO,QAAQ,CAAC2D,YAAD,CAAR,GAA2B,IAA5B,CAAkC,0BAAlC,CAAN,CAEAlE,MAAM,CAACQ,QAAQ,CAAC0D,YAAD,CAAR,GAA2B,IAA5B,CAAkC,iCAAlC,CAAN,CAEAlE,MAAM,CAACM,QAAQ,CAAC2C,IAAD,CAAR,GAAmB,IAApB,CAA0B,kBAA1B,CAAN,CAEAjD,MAAM,CAACM,QAAQ,CAAC8D,MAAD,CAAR,GAAqB,IAAtB,CAA4B,oBAA5B,CAAN,CAEApE,MAAM,CACJiD,IAAI,CAACC,MAAL,GAAgB,CAAhB,EAAqBkB,MAAM,CAAClB,MAAP,GAAkB,CADnC,CAEJ,0CAFI,CAAN,CAKA,GAAMoB,CAAAA,OAAO,CAAG,GAAIrE,CAAAA,YAApB,CACA,GAAMsE,CAAAA,YAAY,CAAGJ,UAAU,CAACjC,GAAX,CAAe,SAAAmC,IAAI,oBAASA,IAAT,EAAnB,CAArB,CAEAC,OAAO,CAACE,UAAR,CAAqB,EAArB,CAEA,QAASC,CAAAA,KAAT,CAAef,KAAf,CAAsB,CACpB,KAAKgB,KAAL,CAAWhB,KAAX,CACD,CAED,GAAMiB,CAAAA,WAAW,CAAG,EAApB,CACA,GAAIC,CAAAA,UAAJ,CASA,QAASC,CAAAA,UAAT,CAAoBnB,KAApB,CAA2B,gBAEzB,GAAI1C,QAAQ,GAAK,YAAjB,CAA+B,CAC7B,MAAO,MAAK0D,KAAL,CAAWhB,KAAX,CACR,CAEDoB,YAAY,CAACF,UAAD,CAAZ,CACAD,WAAW,CAACI,IAAZ,CAAiBrB,KAAK,CAACC,QAAN,EAAjB,EACAiB,UAAU,CAAGI,UAAU,CAAC,UAAM,CAC5B,KAAI,CAACN,KAAL,CAAWjB,YAAY,CAACkB,WAAW,CAACb,IAAZ,CAAiB,EAAjB,CAAD,CAAvB,CACD,CAFsB,CAEpB,EAFoB,CAGxB,CAQD,QAASmB,CAAAA,GAAT,EAAyB,IAAZvB,CAAAA,KAAY,2DAAJ,EAAI,CACvB,KAAKgB,KAAL,CAAWhB,KAAX,CACD,CAEDY,OAAO,CAACY,MAAR,CAAiBtE,OAAO,CAAC6D,KAAD,CAAQQ,GAAR,CAAa,CAAEE,WAAW,CAAE,KAAf,CAAb,CAAxB,CACAb,OAAO,CAACc,MAAR,CAAiBxE,OAAO,CAACiE,UAAD,CAAaI,GAAb,CAAkB,CAAEE,WAAW,CAAE,KAAf,CAAlB,CAAxB,CAGA,GAAMnD,CAAAA,aAAa,CAAG,GACnBqD,MADmB,CACZ3E,OAAO,CAACuD,aAAD,CADK,EAEnB/B,GAFmB,CAEf,SAAAmC,IAAI,CAAI,CACX,GAAI1C,cAAc,CAAC0C,IAAD,CAAd,GAAyB,IAA7B,CAAmC,CACjC,MAAOA,CAAAA,IACR,CAED,MAAOtE,CAAAA,IAAI,CAAC+D,IAAL,CAAU7C,GAAV,CAAeoD,IAAf,CACR,CARmB,EASnBnC,GATmB,CASf,SAAAmC,IAAI,QAAItE,CAAAA,IAAI,CAACuF,OAAL,CAAajB,IAAb,CAAJ,CATW,CAAtB,CAWA,GAAIkB,CAAAA,IAAJ,CAOA,QAASC,CAAAA,OAAT,EAAmB,CACjB,GAAI/E,KAAK,CAAC8E,IAAD,CAAL,GAAgB,KAApB,CAA2B,CACzBA,IAAI,CAACH,MAAL,CAAYK,kBAAZ,GACAF,IAAI,CAACH,MAAL,CAAYH,GAAZ,GACAM,IAAI,CAACH,MAAL,CAAYM,MAAZ,GACAH,IAAI,CAACL,MAAL,CAAYO,kBAAZ,GACAF,IAAI,CAACL,MAAL,CAAYD,GAAZ,GACAM,IAAI,CAACL,MAAL,CAAYQ,MAAZ,GACAH,IAAI,CAACE,kBAAL,GACAF,IAAI,CAACI,IAAL,EACD,CAVgB,aAYD7E,OAZC,CAYTC,GAZS,UAYTA,GAZS,CAajB,GAAMiD,CAAAA,IAAI,CAAG,CAAEjD,GAAG,CAAHA,GAAF,CAAb,CACA,GAAM6E,CAAAA,IAAI,CAAG,EAAb,CACA,GAAIC,CAAAA,GAAJ,CAIA,GAAI5C,IAAI,GAAK,EAAb,CAAiB,CACf2C,IAAI,CAACb,IAAL,CAAUX,MAAV,CACD,CAGD,GAAInB,IAAI,GAAK,EAAb,CAAiB,2BACgBA,IAAI,CAChC6C,IAD4B,GAE5B3C,OAF4B,CAEpB1B,oBAFoB,CAEE,EAFF,EAG5B0B,OAH4B,CAGpBzB,qBAHoB,EAI5BkC,KAJ4B,CAItB,GAJsB,CADhB,wDACRmC,OADQ,2BACIC,QADJ,iCAMfH,GAAG,CAAGE,OAAN,CACAC,QAAQ,CAACC,OAAT,CAAiB,SAAA5B,IAAI,QAAIuB,CAAAA,IAAI,CAACb,IAAL,CAAUV,IAAV,CAAJ,CAArB,CACD,CAED,GAAI5D,KAAK,CAACoF,GAAD,CAAL,GAAe,KAAnB,CAA0B,CAExBN,IAAI,CAAGrF,KAAK,CAAC2F,GAAD,CAAMD,IAAN,CAAY5B,IAAZ,CACb,CAHD,IAGO,CAEL,GAAMkC,CAAAA,YAAY,CAAG,CAAEN,IAAI,CAAJA,IAAF,CAAQ5B,IAAI,CAAJA,IAAR,CAArB,CACAkC,YAAY,CAACL,GAAb,CAAmBA,GAAnB,CACAN,IAAI,CAAG1E,aAAa,CAACqF,YAAD,CACrB,CAEDX,IAAI,CAACY,WAAL,CAAiB,OAAjB,CAA0B,iBAAM7B,CAAAA,OAAO,CAAC8B,IAAR,CAAa,YAAb,CAAN,CAA1B,EACAb,IAAI,CAACY,WAAL,CAAiB,YAAjB,CAA+B,iBAAM7B,CAAAA,OAAO,CAAC8B,IAAR,CAAa,iBAAb,CAAN,CAA/B,EACAb,IAAI,CAACY,WAAL,CAAiB,OAAjB,CAA0B,SAAAE,GAAG,QAAI/B,CAAAA,OAAO,CAAC8B,IAAR,CAAa,YAAb,CAA2BC,GAA3B,CAAJ,CAA7B,EACAd,IAAI,CAACY,WAAL,CAAiB,MAAjB,CAAyB,iBAAM7B,CAAAA,OAAO,CAAC8B,IAAR,CAAa,WAAb,CAAN,CAAzB,EACAb,IAAI,CAACL,MAAL,CAAYoB,IAAZ,CAAiBhC,OAAO,CAACY,MAAzB,EACAK,IAAI,CAACH,MAAL,CAAYkB,IAAZ,CAAiBhC,OAAO,CAACc,MAAzB,CACD,CAOD,GAAMmB,CAAAA,OAAO,CAAG5F,QAAQ,CAAC6E,OAAD,CAAUtB,YAAV,CAAxB,CASA,GAAMsC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,SAAS,QAAI,UAACC,OAAD,CAAUC,QAAV,CAAuB,IAClD5G,CAAAA,IADkD,CACzC0G,SADyC,CAClD1G,IADkD,CAE1D,GAAMiD,CAAAA,OAAO,CAAG5C,UAAU,CAACuG,QAAD,CAAWpC,YAAX,CAA1B,CAEA,GAAI9D,KAAK,CAACuC,OAAD,CAAL,GAAmB,KAAnB,EAA4BA,OAAO,CAACE,MAAR,CAAiB,CAAjD,CAAoD,CAClDoB,OAAO,CAAC8B,IAAR,CAAa,QAAb,CAAuB,CAAErG,IAAI,CAAJA,IAAF,CAAQ2G,OAAO,CAAPA,OAAR,CAAiBC,QAAQ,CAARA,QAAjB,CAAvB,EACAJ,OAAO,EACR,CACF,CARgC,CAAjC,CAiBA,GAAMK,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAAH,SAAS,QAAI,WAAM,IAChC1G,CAAAA,IADgC,CACvB0G,SADuB,CAChC1G,IADgC,CAExCuE,OAAO,CAAC8B,IAAR,CAAa,OAAb,CAAsB,CAAErG,IAAI,CAAJA,IAAF,CAAtB,CACD,CAH+B,CAAhC,CAYA,GAAM8G,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,SAAM,UAAAR,GAAG,CAAI,CAClCA,GAAG,CAACS,WAAJ,CAAkB,kBAAlB,CACAxC,OAAO,CAAC8B,IAAR,CAAa,OAAb,CAAsBC,GAAtB,CACD,CAHsB,CAAvB,CAaA,GAAMU,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,MAAY9E,IAAZ,KAAG+E,CAAAA,KAAH,MAAGA,KAAH,OACrB/E,CAAAA,IAAI,CACF,IADE,CAEF+E,KAAK,CAAC9E,GAAN,CAAU,SAACmC,IAAD,CAAO4C,KAAP,CAAiB,CACzB,GAAMlH,CAAAA,IAAI,CAAGiC,aAAa,CAACiF,KAAD,CAA1B,CACA,GAAM3C,CAAAA,OAAO,CAAGzE,EAAE,CAACqH,KAAH,CAASnH,IAAT,CAAhB,CACAuE,OAAO,CAACvE,IAAR,CAAeA,IAAf,CACAuE,OAAO,CAACnC,IAAR,CAAekC,IAAf,CACA,MAAOC,CAAAA,OACR,CAND,CAFE,CADiB,CAAvB,CAoBA,GAAM6C,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,OAAelF,IAAf,CAAwB,IAArBmF,CAAAA,QAAqB,OAArBA,QAAqB,CAC5CA,QAAQ,CAACnB,OAAT,CAAiB,SAAAQ,SAAS,CAAI,CAC5BA,SAAS,CAACN,WAAV,CAAsB,QAAtB,CAAgCK,eAAe,CAACC,SAAD,CAA/C,EACAA,SAAS,CAACN,WAAV,CAAsB,OAAtB,CAA+BS,cAAc,CAACH,SAAD,CAA7C,EACAA,SAAS,CAACN,WAAV,CAAsB,OAAtB,CAA+BU,cAAc,CAACJ,SAAD,CAA7C,CACD,CAJD,EAKAxE,IAAI,EACL,CAPD,CAcAqC,OAAO,CAAC+C,IAAR,CAAe,UAAM,CACnB/C,OAAO,CAACE,UAAR,CAAmByB,OAAnB,CAA2B,SAAA5B,IAAI,CAAI,CACjC,GAAI,CACFA,IAAI,CAACoB,kBAAL,GACApB,IAAI,CAACiD,KAAL,EACD,CAAC,MAAOC,KAAP,CAAc,CACdA,KAAK,CAACT,WAAN,CAAoB,8BAApB,CACAxC,OAAO,CAAC8B,IAAR,CAAa,OAAb,CAAsBmB,KAAtB,CACD,CACF,CARD,CASD,CAVD,CAiBAjD,OAAO,CAACkD,UAAR,CAAqB,UAAM,CACzB,GAAMC,CAAAA,KAAK,CAAG,CACZT,KAAK,CAAEjF,QAAQ,CAACC,aAAD,CADH,CAEZoF,QAAQ,CAAE,CAAC,OAAD,CAAUL,cAAV,CAFE,CAGZI,aAAa,CAAE,CAAC,UAAD,CAAaA,aAAb,CAHH,CAAd,CAMAhH,KAAK,CAACuH,IAAN,CAAWD,KAAX,CAAkB,SAAApB,GAAG,CAAI,CACvB,GAAI5F,KAAK,CAAC4F,GAAD,CAAL,GAAe,KAAnB,CAA0B,CACxBA,GAAG,CAACS,WAAJ,CAAkB,iCAAlB,CACA,MAAOxC,CAAAA,OAAO,CAAC8B,IAAR,CAAa,OAAb,CAAsBC,GAAtB,CACR,CAED/B,OAAO,CAAC8B,IAAR,CAAa,SAAb,EACAZ,OAAO,EACR,CARD,CASD,CAhBD,CAsBAlB,OAAO,CAACqD,KAAR,CAAgB,UAAM,CACpBrD,OAAO,CAACkD,UAAR,EACD,CAFD,CAIA,MAAOlD,CAAAA,OACR,CAEDsD,MAAM,CAACC,OAAP,CAAiB,CAAE9D,aAAa,CAAbA,aAAF,CAAjB","sourcesContent":["/*\n\nopti-node-watch\n\nAPI doc in ../readme.md\n\n@module opti-node-watch\n\n*/\n\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst assert = require(\"assert\");\nconst { EventEmitter } = require(\"events\");\nconst { spawn } = require(\"child_process\");\nconst async = require(\"async\");\nconst micromatch = require(\"micromatch\");\nconst isArray = require(\"lodash/isArray\");\nconst isString = require(\"lodash/isString\");\nconst isNumber = require(\"lodash/isNumber\");\nconst isFinite = require(\"lodash/isFinite\");\nconst isNil = require(\"lodash/isNil\");\nconst flatten = require(\"lodash/flatten\");\nconst debounce = require(\"lodash/debounce\");\nconst through = require(\"through\");\nconst { createProcess } = require(\"opti-node\");\nconst { NODE_ENV = \"development\" } = process.env;\nconst cwd = process.cwd();\n\n// lazy load chalk later\nlet chalk;\n\n// try to detect root paths with these\nconst unixRoot = \"/\";\nconst windowsRootPattern = /^[A-Z]:\\\\\\\\/;\n\n// patterns to format and colorize the error output\nconst lineBreakPattern = /\\n/;\nconst internalErrorPatterns = [\n  \"internal/modules/cjs/loader.js\",\n  \"internal/bootstrap/node.js\"\n];\nconst colorErrorPatterns = [/[a-z]{3,10}?Error/gim];\nconst urlPatterns = [/(?!:\\()\\/.+(?=\\))/gim];\nconst leadingQuotesPattern = /^(\"|')/;\nconst trailingQuotesPattern = /(\"|')$/;\n\n/**\n * True when a string is likely to be an absolute path\n * @private\n * @method isAbsolutePath\n * @param {string} str\n * @returns {boolean}\n */\nconst isAbsolutePath = str =>\n  str.startsWith(unixRoot) === true || windowsRootPattern.test(str) === true;\n\n/**\n * Stat a bunch of absolute paths. For use as async function.\n * @private\n * @method statList\n * @param {string[]} absolutePaths\n * @returns {function}\n */\nconst statList = absolutePaths => done =>\n  async.map(absolutePaths, fs.stat, done);\n\n/**\n * True if every item in the list does not match any node internal error\n * @private\n * @method hasNoInternalErrors\n * @param {string} stdLine\n * @returns {boolean}\n */\nconst hasNoInternalErrors = stdLine =>\n  internalErrorPatterns.every(pattern => {\n    if (isString(pattern) === true) {\n      return stdLine.indexOf(pattern) === -1;\n    }\n\n    if (pattern.constructor === RegExp) {\n      return pattern.test(stdLine) === false;\n    }\n\n    throw new Error(\"internalErrorPatterns has a bad element\");\n  }) === true;\n\n/**\n * Take a string from stderr and color error types\n * @private\n * @method colorErrors\n * @param {string} stdLine\n * @returns {string}\n */\nfunction colorErrors(stdLine) {\n  // lazy load chalk\n  if (chalk === undefined) {\n    chalk = require(\"chalk\");\n  }\n\n  return colorErrorPatterns.reduce((op, pattern) => {\n    const matches = pattern.exec(op);\n\n    if (matches !== null && matches.length > 0) {\n      op = op.replace(pattern, chalk.red(matches[0]));\n    }\n\n    return op;\n  }, stdLine);\n}\n\n/**\n * Highlight paths and urls in the stderr output\n * @private\n * @method colorUrls\n * @param {string} stdLine\n * @returns {string}\n */\nfunction colorUrls(stdLine) {\n  // lazy load chalk\n  if (chalk === undefined) {\n    chalk = require(\"chalk\");\n  }\n\n  return urlPatterns.reduce((op, pattern) => {\n    const matches = pattern.exec(op);\n\n    if (matches !== null && matches.length > 0) {\n      op = op.replace(\n        pattern,\n        chalk\n          .bgHex(\"#000000\")\n          .hex(\"#EEEEEE\")\n          .underline(matches[0])\n      );\n    }\n\n    return op;\n  }, stdLine);\n}\n\n/**\n * Break up stderr output into an array, colorize, and join back to a string\n * @private\n * @method formatErrors\n * @param {string|buffer} chunk\n * @returns {string}\n */\nconst formatErrors = chunk =>\n  chunk\n    .toString()\n    .split(lineBreakPattern)\n    .filter(hasNoInternalErrors)\n    .map(colorErrors)\n    .map(colorUrls)\n    .join(\"\\n\");\n\n/**\n * Create an opti-node-watch object\n * @public\n * @method createWatcher\n * @param {object} opts\n * @param {string[]} opts.watchPatterns list of absolute paths\n * @param {number} [opts.restartDelay=0] how long to wait before restarting\n * @param {string[]} [extensions=js,jsx,json] extensions to watch\n * @param {string} [exec] command to execute\n * @param {string} [script] script to run with opti-node\n * @returns {object}\n */\nfunction createWatcher(opts) {\n  const {\n    watchPatterns = [],\n    restartDelay = 0,\n    extensions = [\"js\", \"jsx\", \"json\"],\n    exec = \"\",\n    script = \"\"\n  } = opts;\n\n  //\n  // strictly validate all the inputs\n  //\n\n  assert(isArray(watchPatterns) === true, \"watchPatterns is an array\");\n\n  assert(\n    watchPatterns.every(item => isString(item) === true) === true,\n    \"watchPatterns is an array of strings\"\n  );\n\n  assert(\n    extensions.every(item => isString(item) === true) === true,\n    \"extensions is an array of strings\"\n  );\n\n  assert(isNumber(restartDelay) === true, \"restartDelay is a number\");\n\n  assert(isFinite(restartDelay) === true, \"restartDelay is a finite number\");\n\n  assert(isString(exec) === true, \"exec is a string\");\n\n  assert(isString(script) === true, \"script is a string\");\n\n  assert(\n    exec.length === 0 || script.length === 0,\n    \"you can use exec or script, but not both\"\n  );\n\n  const watcher = new EventEmitter();\n  const globPatterns = extensions.map(item => `*.${item}`);\n\n  watcher.fsWatchers = [];\n\n  function write(chunk) {\n    this.queue(chunk);\n  }\n\n  const errorChunks = [];\n  let errorTimer;\n\n  /**\n   * Used with through module to help us format errors and proxy\n   * stderr output\n   * @private\n   * @method writeError\n   * @param {string|buffer} chunk\n   */\n  function writeError(chunk) {\n    // in production give the output as-is\n    if (NODE_ENV === \"production\") {\n      return this.queue(chunk);\n    }\n\n    clearTimeout(errorTimer);\n    errorChunks.push(chunk.toString());\n    errorTimer = setTimeout(() => {\n      this.queue(formatErrors(errorChunks.join(\"\")));\n    }, 10);\n  }\n\n  /**\n   * For through module end argument. End of stream\n   * @private\n   * @method end\n   * @param {string} [chunk=\"\"]\n   */\n  function end(chunk = \"\") {\n    this.queue(chunk);\n  }\n\n  watcher.stdout = through(write, end, { autoDestroy: false });\n  watcher.stderr = through(writeError, end, { autoDestroy: false });\n\n  // unless the user passed absolute paths to watch prefix it with `cwd`\n  const absolutePaths = []\n    .concat(flatten(watchPatterns))\n    .map(item => {\n      if (isAbsolutePath(item) === true) {\n        return item;\n      }\n\n      return path.join(cwd, item);\n    })\n    .map(item => path.resolve(item));\n\n  let proc;\n\n  /**\n   * Restart the child process\n   * @private\n   * @method respawn\n   */\n  function respawn() {\n    if (isNil(proc) === false) {\n      proc.stderr.removeAllListeners();\n      proc.stderr.end();\n      proc.stderr.unpipe();\n      proc.stdout.removeAllListeners();\n      proc.stdout.end();\n      proc.stdout.unpipe();\n      proc.removeAllListeners();\n      proc.kill();\n    }\n\n    const { env } = process;\n    const opts = { env };\n    const args = [];\n    let cmd;\n\n    // run opti-node\n    // e.g. opti-node script.js\n    if (exec === \"\") {\n      args.push(script);\n    }\n\n    // execute something else\n    if (exec !== \"\") {\n      const [execCmd, ...execArgs] = exec\n        .trim()\n        .replace(leadingQuotesPattern, \"\")\n        .replace(trailingQuotesPattern)\n        .split(\" \");\n      cmd = execCmd;\n      execArgs.forEach(item => args.push(item));\n    }\n\n    if (isNil(cmd) === false) {\n      // not running opti-node\n      proc = spawn(cmd, args, opts);\n    } else {\n      // running with opti-node\n      const optiNodeOpts = { args, opts };\n      optiNodeOpts.cmd = cmd;\n      proc = createProcess(optiNodeOpts);\n    }\n\n    proc.addListener(\"close\", () => watcher.emit(\"proc-close\"));\n    proc.addListener(\"disconnect\", () => watcher.emit(\"proc-disconnect\"));\n    proc.addListener(\"error\", err => watcher.emit(\"proc-error\", err));\n    proc.addListener(\"exit\", () => watcher.emit(\"proc-exit\"));\n    proc.stdout.pipe(watcher.stdout);\n    proc.stderr.pipe(watcher.stderr);\n  }\n\n  /**\n   * Debounced restart function using delay from the user\n   * @private\n   * @method restart\n   */\n  const restart = debounce(respawn, restartDelay);\n\n  /**\n   * Event handler for FSWatcher change event\n   * @private\n   * @method fsWatcherChange\n   * @param {object} fsWatcher\n   * @returns {function}\n   */\n  const fsWatcherChange = fsWatcher => (evtType, filename) => {\n    const { path } = fsWatcher;\n    const matches = micromatch(filename, globPatterns);\n\n    if (isNil(matches) === false && matches.length > 0) {\n      watcher.emit(\"change\", { path, evtType, filename });\n      restart();\n    }\n  };\n\n  /**\n   * Event handler for FSWatcher close event\n   * @private\n   * @method fsWatcherClose\n   * @param {object} fsWatcher\n   * @returns {function}\n   */\n  const fsWatcherClose = fsWatcher => () => {\n    const { path } = fsWatcher;\n    watcher.emit(\"close\", { path });\n  };\n\n  /**\n   * Event handler for FSWatcher error event\n   * @private\n   * @method fsWatcherError\n   * @param {object} fsWatcher\n   * @returns {function}\n   */\n  const fsWatcherError = () => err => {\n    err.watcherHelp = \"fs watcher error\";\n    watcher.emit(\"error\", err);\n  };\n\n  /**\n   * Create FSWatcher objects for each absolute path. Async function\n   * @private\n   * @method createWatchers\n   * @param {object} results\n   * @param {object[]} results.stats array of Stat\n   * @returns {function}\n   */\n  const createWatchers = ({ stats }, done) =>\n    done(\n      null,\n      stats.map((item, index) => {\n        const path = absolutePaths[index];\n        const watcher = fs.watch(path);\n        watcher.path = path;\n        watcher.stat = item;\n        return watcher;\n      })\n    );\n\n  /**\n   * Assign event listeners to all the watchers. Async function\n   * @private\n   * @method watcherEvents\n   * @param {object} results\n   * @param {object[]} results.watchers\n   * @returns {function}\n   */\n  const watcherEvents = ({ watchers }, done) => {\n    watchers.forEach(fsWatcher => {\n      fsWatcher.addListener(\"change\", fsWatcherChange(fsWatcher));\n      fsWatcher.addListener(\"close\", fsWatcherClose(fsWatcher));\n      fsWatcher.addListener(\"error\", fsWatcherError(fsWatcher));\n    });\n    done();\n  };\n\n  /**\n   * Attempt to gracefully shutdown all the watchers\n   * @public\n   * @method watcher.stop\n   */\n  watcher.stop = () => {\n    watcher.fsWatchers.forEach(item => {\n      try {\n        item.removeAllListeners();\n        item.close();\n      } catch (error) {\n        error.watcherHelp = \"error while stopping watcher\";\n        watcher.emit(\"error\", error);\n      }\n    });\n  };\n\n  /**\n   * Watch the paths provided for changes. Probably doesn't need to be public\n   * @public\n   * @method watcher.watchPaths\n   */\n  watcher.watchPaths = () => {\n    const steps = {\n      stats: statList(absolutePaths),\n      watchers: [\"stats\", createWatchers],\n      watcherEvents: [\"watchers\", watcherEvents]\n    };\n\n    async.auto(steps, err => {\n      if (isNil(err) === false) {\n        err.watcherHelp = \"error while setting up watchers\";\n        return watcher.emit(\"error\", err);\n      }\n\n      watcher.emit(\"started\");\n      respawn();\n    });\n  };\n\n  /**\n   * Start the watcher. Creates FSWatcher objects and wires up events\n   * @method watcher.start\n   */\n  watcher.start = () => {\n    watcher.watchPaths();\n  };\n\n  return watcher;\n}\n\nmodule.exports = { createWatcher };\n"],"file":"index.js"}